{"version":3,"sources":["pages/Trade/Order/ShortButtons.js","pages/Trade/Order/LongButtons.js","pages/IndexInfo/DataTable.js","pages/IndexInfo/IndexInfo.js","pages/Trade/Order/Order.js","pages/Trade/Order/LabTabs.js","pages/Trade/YourData/TimeComponent.js","pages/Trade/YourData/YourData.js","pages/Trade/Loading.js","pages/Trade/Trade.js","pages/Faucet/Faucet.js","pages/TopBar/DepositButton.js","pages/TopBar/FaucetButton.js","pages/TopBar/Login.js","static/VistaRedLogo.png","pages/TopBar/TopBar.js","SelectPerp.js","App.js","theme.js","index.js"],"names":["styled","Paper","theme","typography","body2","padding","spacing","color","palette","text","primary","OrderShort","state","contract_avaperps","amount","user","useMoralis","perp","amm_base","amm_quote","user_quote","user_base","perp_name","user_collateral","avax_price","peg_multiplier","k","disabled","Grid","container","item","xs","Button","variant","style","width","onClick","a","from","get","methods","open_short","send","quote1","Number","base","Math","abs","toFixed","open_short_base_amount","close_short","close_short_base_amount","OrderLong","open_long","open_long_base_amount","close_long","close_long_base_amount","columns","field","type","DataGridDemo","composition","rows","Array","keys","map","value","id","token","toUpperCase","price","pageSize","autoHeight","BootstrapDialog","Dialog","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","sx","m","p","IconButton","position","right","top","grey","CustomizedDialogs","React","open","setOpen","handleClose","Info","DialogContent","dividers","Typography","gutterBottom","whiteSpace","DialogActions","autoFocus","Item","setAmount","set_composition","get_composition","call","comp","console","log","info","mark_price","buttons","TextField","inputProps","fontSize","onChange","event","target","Box","mt","a11yProps","index","LabTabs","useTheme","setValue","TabPanel","role","hidden","bgcolor","AppBar","Tabs","newValue","textColor","Tab","label","axis","direction","onChangeIndex","dir","TimeComponent","time","Date","now","this","interval","setInterval","setState","clearInterval","seconds_until_hour","floor","seconds","minutes","slice","Component","body1","textAlign","GridItem","BasicGrid","oracle_price","tvl","funding_rate","pow","Divider","borderBottomWidth","SimpleBackdrop","message","content","CircularProgress","Backdrop","zIndex","drawer","secondary","App","contract_erc20copy","net_id","address_avaperps","get_avax_price","promises","amms","balanceOf","Promise","all","values","amm","base_asset_amount","quote_asset_amount","justifyContent","borderRadius","Wrapper","FormDialog","available","address_erc20copy","approve","deposit_collateral","withdraw_collateral","startIcon","Avatar","src","DialogContentText","margin","helperText","loading","setLoading","handleClickOpen","mint","increaseAllowance","window","location","reload","Login","setPage","authenticate","isAuthenticated","logout","signingMessage","TopBar","useState","setAvailable","getAvailable","allowance","resp","useEffect","background","Toolbar","logo","alt","height","noWrap","component","flexGrow","SelectTextFields","set_perp","currencies","perps","noValidate","autoComplete","select","option","MenuItem","ResponsiveDrawer","set_contract_avaperps","set_contract_erc20copy","set_net_id","set_page","get_net_id","Web3","givenProvider","web3","eth","net","getId","Contract","abi_avaperps","abi_erc20copy","split","pages","trade","faucet","display","CssBaseline","darkTheme","createTheme","main","error","red","A400","mode","ReactDOM","render","appId","serverUrl","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.56d16cd6.chunk.js","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography, TextField, AppBar, Button } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    // textAlign: 'center',\n    color: theme.palette.text.primary,\n}));\n\nconst cap = 5;\n\nexport default function OrderShort({ state, contract_avaperps, amount }) {\n    const { user } = useMoralis();\n\n    const {\n        perp, amm_base, amm_quote, user_base, user_quote, user_collateral, avax_price, perp_name, peg_multiplier\n    } = state;\n\n    const perp_price = amm_quote / amm_base;\n    const k = amm_quote * amm_base;\n    \n    const disabled = !user || amount <= 0 || amount * peg_multiplier > user_quote;\n\n    function open_short_base_amount() {\n        const quote1 = Number(amm_quote) - amount * peg_multiplier;\n        const base1 = k / quote1;\n        const base = amm_base - base1;\n        return Math.abs(\n            base / peg_multiplier\n        ).toFixed(2);\n    }\n\n    function close_short_base_amount() {\n        const quote1 = Number(amm_quote) + amount * peg_multiplier;\n        const base1 = k / quote1;\n        const base = amm_base - base1;\n        return Math.abs(\n            base / peg_multiplier\n        ).toFixed(2);\n    }\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={6}>\n                <Button\n                    variant='contained'\n                    style={{ width: '100%' }}\n                    disabled={disabled}\n                    onClick={async () => {\n                        const from = user.get('ethAddress');\n                        await contract_avaperps.methods.open_short(\n                            perp, amount * peg_multiplier\n                        ).send({ from });\n                    }}\n                >\n                    Open Short: {open_short_base_amount()} {perp_name}-PERP\n                </Button>\n            </Grid>\n\n            <Grid item xs={6}>\n                <Button\n                    variant='contained'\n                    style={{ width: '100%' }}\n                    disabled={disabled}\n                    onClick={async () => {\n                        const from = user.get('ethAddress');\n                        await contract_avaperps.methods.close_short(\n                            perp, amount * peg_multiplier\n                        ).send({ from });\n                    }}\n                >\n                    Close Short: {close_short_base_amount()} {perp_name}-PERP\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography, TextField, AppBar, Button } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    // textAlign: 'center',\n    color: theme.palette.text.primary,\n}));\n\nconst cap = 5;\n\nexport default function OrderLong({ state, contract_avaperps, amount }) {\n    const { user } = useMoralis();\n\n    const {\n        amm_base, amm_quote, user_base, user_quote, user_collateral, avax_price, perp_name, peg_multiplier, perp\n    } = state;\n\n    const perp_price = amm_quote / amm_base;\n    const k = amm_quote * amm_base;\n\n    const disabled = !user || amount <= 0 || amount * peg_multiplier > user_quote;\n\n    function open_long_base_amount() {\n        const quote1 = Number(amm_quote) + amount * peg_multiplier;\n        const base1 = k / quote1;\n        const base = amm_base - base1;\n        return Math.abs(\n            base / peg_multiplier\n        ).toFixed(2);\n    }\n\n    function close_long_base_amount() {\n        const quote1 = Number(amm_quote) - amount * peg_multiplier;\n        const base1 = k / quote1;\n        const base = amm_base - base1;\n        return Math.abs(\n            base / peg_multiplier\n        ).toFixed(2);\n    }\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={6}>\n                <Button\n                    variant='contained'\n                    style={{ width: '100%' }}\n                    disabled={disabled}\n                    onClick={async () => {\n                        const from = user.get('ethAddress');\n                        await contract_avaperps.methods.open_long(\n                            perp, amount * peg_multiplier\n                        ).send({ from });\n                    }}\n                >\n                    Open Long: {open_long_base_amount()} {perp_name}-PERP\n                </Button>\n            </Grid>\n\n            <Grid item xs={6}>\n                <Button\n                    variant='contained'\n                    style={{ width: '100%' }}\n                    disabled={disabled}\n                    onClick={async () => {\n                        const from = user.get('ethAddress');\n                        await contract_avaperps.methods.close_long(\n                            perp, amount * peg_multiplier\n                        ).send({ from });\n                    }}\n                >\n                    Close Long: {close_long_base_amount()} {perp_name}-PERP\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n","import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\n\nconst peg_multiplier = 10 ** 8;\nconst type = 'number';\nconst columns = [\n    { field: 'token' },\n    { field: 'amount', type: 'number' },\n    { field: 'price', type: 'number' },\n]\n\nconst rows = [\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nexport default function DataGridDemo({ composition }) {\n    const rows = [...Array(10).keys()].map( (value, id) => {\n        const token = composition[0][id].toUpperCase();\n        const amount = composition[1][id];\n        const price = '$' + (\n            composition[2][id] / peg_multiplier\n        ).toFixed(2);\n        return { id, token, amount, price };\n    });\n\n    return (\n        <div style={{ width: '100%' }}>\n            <DataGrid\n                rows={rows}\n                columns={columns}\n                pageSize={5}\n                autoHeight\n            />\n        </div>\n    );\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\n\nimport { Info } from '@mui/icons-material';\nimport DataTable from './DataTable';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n    '& .MuiDialogContent-root': {\n        padding: theme.spacing(2),\n    },\n    '& .MuiDialogActions-root': {\n        padding: theme.spacing(1),\n    },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n    const { children, onClose, ...other } = props;\n\n    return (\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n            {children}\n            {onClose ? (\n                <IconButton\n                    aria-label=\"close\"\n                    onClick={onClose}\n                    sx={{\n                        position: 'absolute',\n                        right: 8,\n                        top: 8,\n                        color: (theme) => theme.palette.grey[500],\n                    }}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </DialogTitle>\n    );\n};\n\nBootstrapDialogTitle.propTypes = {\n    children: PropTypes.node,\n    onClose: PropTypes.func.isRequired,\n};\n\nexport default function CustomizedDialogs({ composition }) {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <IconButton variant=\"outlined\" onClick={handleClickOpen}>\n                <Info />\n            </IconButton>\n            <BootstrapDialog\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}\n            >\n                <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Avalanche INDEX Description\n                </BootstrapDialogTitle>\n                <DialogContent dividers>\n                    <Typography gutterBottom\n                        style={{ whiteSpace: \"pre-wrap\" }}\n                    >\n                        The INDEX token derives its price from the Avalanche network's top 10 projects by market cap, excluding stablecoins.\n                        INDEX was established on 2022-01-19T07:50:00.000Z at 1 USDC per token, containing LINK, REN, AMPL, ORN, AVAX, ALEPH, SWAP, ANY, SUSHI, and REEF.\n                        If one of INDEX's component tokens drops out of the top 10, a 'replace_token' function can be called by a DAO vote.\n                        INDEX's price is updated every 5 minutes, with automatic rebalancing if a single component exceeds 20% weight.\n                    </Typography>\n\n                    <DataTable\n                        composition={composition}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose}>\n                        Save changes\n                    </Button>\n                </DialogActions>\n            </BootstrapDialog>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography, TextField, AppBar, Button } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nimport ShortButtons from './ShortButtons';\nimport LongButtons from './LongButtons';\nimport IndexInfo from './../../IndexInfo/IndexInfo';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    // textAlign: 'center',\n    color: theme.palette.text.primary,\n}));\n\nconst cap = 5;\n\nexport default function OrderShort({ state, contract_avaperps, value, children }) {\n    const [amount, setAmount] = React.useState(0);\n    const { user } = useMoralis();\n\n    const {\n        amm_base, amm_quote, user_base, user_quote, user_collateral, avax_price, peg_multiplier, perp\n    } = state;\n\n    const [composition, set_composition] = React.useState();\n\n    const get_composition = async () => {\n        const comp = await contract_avaperps.methods.composition().call();\n        set_composition(comp);\n    }\n\n    if (composition == null) {\n        get_composition();\n    }\n\n    console.log(composition);\n\n    const info = perp ? <div /> : (\n        <IndexInfo\n            composition={composition}\n        />\n    );\n\n    const mark_price = amm_quote / amm_base;\n    \n    const buttons = value ? (\n        <ShortButtons\n            amount={amount}\n            contract_avaperps={contract_avaperps}\n            state={state}\n        />\n    ) : (\n        <LongButtons\n            amount={amount}\n            contract_avaperps={contract_avaperps}\n            state={state}\n        />\n    );\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={6}>\n                <TextField\n                    type='number'\n                    variant='standard'\n                    inputProps={{ style: { fontSize: 30 } }}\n\n                    value={amount}\n                    onChange={event => {\n                        setAmount(event.target.value);\n                    }}\n                />\n            </Grid>\n\n            <Grid item xs={6}>\n                <Item>\n                    USDC\n                </Item>\n\n                <Typography\n                    variant='body2'\n                >\n                    Borrowing Power: {\n                        (user_quote / peg_multiplier).toFixed(2)\n                    }\n                </Typography>\n            </Grid>\n            \n            <Grid item xs={6}>\n                <Typography\n                    variant='h4'\n                >\n                    {\n                        (\n                            amount / mark_price\n                        ).toFixed(2)\n                    } (EST.)\n                </Typography>\n            </Grid>\n\n            <Grid item xs={6}>\n                <Item>\n                    {children}\n                </Item>\n\n                <Typography\n                    variant='body2'\n                >\n                    Max Size: {\n                        (\n                            user_quote / mark_price / peg_multiplier\n                        ).toFixed(2)\n                    }\n                    \n                    {info}\n                </Typography>\n            </Grid>\n\n            <Box mt={2}>\n                {buttons}\n            </Box>\n\n        </Grid>\n    );\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nimport Order from './Order';\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nexport default function LabTabs({ state, contract_avaperps, children }) {\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n    \n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`full-width-tabpanel-${index}`}\n                aria-labelledby={`full-width-tab-${index}`}\n                {...other}\n            >\n                {value === index && (\n                    <Box sx={{ p: 3 }}>\n                        <Typography>{children}</Typography>\n                    </Box>\n                )}\n            </div>\n        );\n    }\n\n    const handleChange = (event, newValue) => {\n        console.log(newValue)\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        console.log(index)\n        setValue(index);\n    };\n\n    return (\n        <Box sx={{ bgcolor: 'background.paper', width: 500 }}>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    // indicatorColor=\"secondary\"\n                    textColor=\"inherit\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"Long\" {...a11yProps(0)} />\n                    <Tab label=\"Short\" {...a11yProps(1)} />\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <TabPanel value={value} index={0} dir={theme.direction}>\n                    <Order\n                        contract_avaperps={contract_avaperps}\n                        state={state}\n                        value={value}\n                    >\n                        {children}                        \n                    </Order>\n                </TabPanel>\n                <TabPanel value={value} index={1} dir={theme.direction}>\n                    <Order\n                        contract_avaperps={contract_avaperps}\n                        state={state}\n                        value={value}\n                    >\n                        {children}\n                    </Order>\n                </TabPanel>\n            </SwipeableViews>\n        </Box>\n    );\n}\n","import React, { Component } from 'react';\n\nconst hour = 3600;\n\nclass TimeComponent extends Component {\n    constructor(props){\n        super(props);\n        this.state = { time: Date.now() };\n    }\n    componentDidMount() {\n        this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    render() {\n        const unix_seconds = Math.floor(this.state.time / 1000);\n        const seconds_since_hour = unix_seconds % hour;\n        const seconds_until_hour = hour - seconds_since_hour;\n        const seconds = seconds_until_hour % 60;\n        const minutes = Math.floor(seconds_until_hour / 60);\n        return(\n            <span> { minutes }:{ ('00' + seconds).slice(-2) } </span>\n        );\n    }\n}\n\nexport default TimeComponent;","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography, Divider } from '@mui/material';\n\nimport TimeComponent from './TimeComponent';\nimport IndexInfo from './../../IndexInfo/IndexInfo';\n\nconst cap = 5;\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body1,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n//   color: theme.palette.common.white,\n}));\n\nfunction GridItem({ children }) {\n    return (\n        <Grid item xs={3}>\n            <Item>\n                {children}\n            </Item>\n        </Grid>\n    );\n}\n\nexport default function BasicGrid({ state }) {\n    const {\n        amm_base, amm_quote, user_base, user_quote, user_collateral, oracle_price, tvl, perp_name, peg_multiplier, perp\n    } = state;\n\n    const mark_price = amm_quote / amm_base;\n    const portfolio_value = (\n        (\n            mark_price * Math.abs(user_base) + Number(user_quote)\n         ) / cap / peg_multiplier\n    ).toFixed(2);\n\n    const funding_rate = (mark_price * peg_multiplier - oracle_price) / oracle_price / 24;\n    const apy = Math.pow(1 + funding_rate, 24 * 365) - 1;\n\n    const position = `\n        ${\n            (Math.abs(user_base) / peg_multiplier).toFixed(2)\n        }\n        ${user_base < 0 ? 'SHORT' : 'LONG'}\n        ${perp_name}-PERP\n    `;\n\n    return (\n        <Box m={2}>\n\n            <Grid container spacing={2}>\n\n                <Grid container item spacing={2}>\n                    <GridItem\n                        xs={3}\n                    >\n                        <Typography\n                            variant='h4'\n                        >\n                            Your Data\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {position}\n\n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            Position\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {\n                            (Math.abs(user_base) * mark_price / peg_multiplier).toFixed(2)\n                        } USDC\n                        \n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            Position Notional Value\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {\n                            (user_quote / peg_multiplier / cap).toFixed(2)\n                        } USDC\n                        \n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            Liquid Capital\n                        </Typography>\n                    </GridItem>\n                </Grid>\n                \n                <Grid container item spacing={2}>\n                    <GridItem\n                        xs={3}\n                    >\n                        <Typography\n                            variant='h4'\n                        >\n                            Market Data\n\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {\n                            (mark_price).toFixed(2)\n                        } USDC\n                        \n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            {perp_name}-PERP Price\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {\n                            (oracle_price / peg_multiplier).toFixed(2)\n                        } USDC\n                        \n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            {perp_name} Price\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {\n                            (funding_rate * 100).toFixed(2)\n                        }% in <TimeComponent />\n                        \n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            Predicted Funding Rate\n                        </Typography>\n                    </GridItem>\n                </Grid>\n                \n                <Grid container item spacing={2}>\n                    <GridItem\n                        xs={3}\n                    >\n                        <Typography\n                            variant='h4'\n                        >\n                            vAMM Data\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {\n                            (\n                                tvl / peg_multiplier\n                            ).toFixed(2)\n                        } USDC\n                        \n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            TVL\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {\n                            (\n                                amm_base / peg_multiplier\n                            ).toFixed(2)\n                        } {perp_name}-PERP\n                        \n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            Base Asset Amount\n                        </Typography>\n                    </GridItem>\n                \n                    <GridItem>\n                        {\n                            (\n                                amm_quote / peg_multiplier\n                            ).toFixed(2)\n                        } USDC\n                        \n                        <Divider sx={{ borderBottomWidth: 2 }} />\n                        \n                        <Typography\n                            variant='subtitle2'\n                        >\n                            Quote Asset Amount\n                        </Typography>\n                    </GridItem>\n                </Grid>\n            \n            </Grid>\n            \n        </Box>\n            \n    );\n}\n","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\n\nexport default function SimpleBackdrop({ message = false }) {\n    const [open, setOpen] = React.useState(true);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n\n    const content = message ? (\n        <Typography\n            variant='h4'\n        >\n            Wrong network. Select Avalanche Fuji Testnet (Network ID 43113) and refresh.\n        </Typography>\n    ) : (\n        <CircularProgress color=\"inherit\" />\n    );\n\n    return (\n        <div>\n            {/* <Button onClick={handleToggle}>Show backdrop</Button> */}\n            <Backdrop\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                open={open}\n                // onClick={handleClose}\n            >\n                {content}\n            </Backdrop>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { Toolbar, Grid, Paper } from '@mui/material';\n\nimport axios from 'axios';\n\nimport Web3 from \"web3\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\n// import TopBar from './TopBar/TopBar.js'\n\nimport LabTabs from './Order/LabTabs.js';\nimport YourData from './YourData/YourData.js';\nimport Loading from './Loading';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    // margin: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nconst cap = 5;\nconst peg_multiplier = 10 ** 8;\n\nexport default function App({ contract_avaperps, contract_erc20copy, net_id, address_avaperps, children, perp_name, perp }) {\n    const { user } = useMoralis();\n\n    const [state, setState] = React.useState();\n\n    async function get_avax_price() {\n        let from = false;\n        if (user) {\n            console.log('user not logged in');\n            from = user.get('ethAddress');\n        }\n\n        if (contract_avaperps == null) {\n            console.log('contract not initialized');\n            return;\n        }\n\n        const promises = [\n            contract_avaperps.methods.amms(perp).call(),\n            from ? contract_avaperps.methods.user_base(perp).call({ from }) : 'Not logged in',\n            from ? contract_avaperps.methods.user_quote().call({ from }) : 'Not logged in',\n            from ? contract_avaperps.methods.user_collateral().call({ from }) : 'Not logged in',\n            contract_avaperps.methods.oracle_price(perp).call(),\n            contract_erc20copy.methods.balanceOf(address_avaperps).call(),\n        ];\n\n        const values = await Promise.all(promises);\n        let [\n            amm, user_base, user_quote, user_collateral, oracle_price, tvl\n        ] = values;\n\n        const amm_base = amm.base_asset_amount;\n        const amm_quote = amm.quote_asset_amount;\n\n        const obj = {\n            amm_base, amm_quote, user_base, user_quote, user_collateral, oracle_price, tvl, perp_name, peg_multiplier, perp\n        };\n\n        setState(obj);\n    }\n\n    React.useEffect(() => {\n        get_avax_price();\n    }, [\n        user, perp\n    ]);\n\n    if (net_id !== 43113) {\n        return (\n            <Loading\n                message\n            />\n        );\n    }\n\n    if (!state) {\n        get_avax_price();\n        return <Loading />;\n    }\n\n    return (\n        <Box\n            p={3}\n        >\n            <Grid\n                container\n                justifyContent=\"center\"\n            >\n                <Item>\n                    <LabTabs\n                        state={state}\n                        contract_avaperps={contract_avaperps}\n                    >\n                        {children}\n                    </LabTabs>\n                </Item>\n            </Grid>\n            <br />\n\n            <Grid\n                container\n                justifyContent=\"center\"\n                // style={{ width: '100%' }}\n                sx={{ borderRadius: '16px' }}\n            >\n                <Item>\n                    <YourData\n                        state={state}\n                    />\n                </Item>\n            </Grid>\n        </Box>\n    );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nimport { TextField, Alert } from '@mui/material';\n\nfunction BasicCard() {\n    return (\n        <Card sx={{ minWidth: 275 }}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"div\" gutterBottom>\n                    USDC Fuji Testnet Faucet\n                </Typography>\n\n                <TextField\n                    label=\"Your Address\"\n                    variant=\"outlined\"\n                />\n\n                <br />\n                <br />\n\n                <Alert severity=\"error\">\n                    This is a beta faucet. Funds are not real.\n                </Alert>\n\n            </CardContent>\n            <CardActions>\n                <Button\n                    variant='contained'\n                >\n                    Request 1000 USDC\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default function Wrapper() {\n    \n}\n","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { Button, Avatar, Box, IconButton } from '@mui/material';\nimport { Close } from '@mui/icons-material';\n\nimport Web3 from \"web3\";\nimport { useMoralis } from \"react-moralis\";\n\nconst peg_multiplier = 10 ** 8;\nconst usdcLogo = 'https://icons-for-free.com/iconfiles/png/512/cryptocurrency+icons+++color+usdc-1324449146826221536.png';\n\nexport default function FormDialog({ contract_avaperps, contract_erc20copy, available, address_avaperps, address_erc20copy }) {\n    const { user } = useMoralis();\n\n    const [open, setOpen] = React.useState(false);\n    const [amount, setAmount] = React.useState();\n    \n    let from;\n    if (user) {\n        from = user.get('ethAddress');\n    }\n\n    const disabled = !user || amount <= 0 || amount > available;\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    async function deposit_collateral() {\n        await contract_erc20copy.methods.approve(\n            address_avaperps, amount * peg_multiplier\n        ).send({ from });\n\n        await contract_avaperps.methods.deposit_collateral(\n            amount * peg_multiplier\n        ).send({ from });\n\n        handleClose();\n    }\n\n    async function withdraw_collateral() {\n        await contract_avaperps.methods.withdraw_collateral(\n            amount * peg_multiplier\n        ).send({ from });\n\n        handleClose();\n    }\n\n    return (\n        <Box m={1}>\n            <Button\n                color='inherit'\n                onClick={handleClickOpen}\n                // style={{ backgroundColor: 'darkSlateGray' }}\n                startIcon={<Avatar\n                    src={usdcLogo}\n                />}\n                disabled={!user || available < 0}\n            >\n                Transfer\n            </Button>\n\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle sx={{ m: 0, p: 2 }}>\n                    Transfer\n                    \n                    <IconButton\n                        aria-label=\"close\"\n                        onClick={handleClose}\n                        sx={{\n                            position: 'absolute',\n                            right: 8,\n                            top: 8,\n                            color: (theme) => theme.palette.grey[500],\n                        }}\n                    >\n                        <Close />\n                    </IconButton>\n                </DialogTitle>\n\n                <DialogContent>\n                    <DialogContentText>\n                        Transfer USDC to and from this trading platform.\n                    </DialogContentText>\n\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Amount (USDC)\"\n                        // fullWidth\n                        variant=\"standard\"\n                        type='number'\n                        helperText={available.toFixed(2) + ' USDC available for deposit'}\n\n                        value={amount}\n                        onChange={event => {\n                            setAmount(event.target.value);\n                        }}\n                    />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        variant='contained'\n                        onClick={deposit_collateral}\n                        disabled={disabled}\n                    >\n                        Deposit\n                    </Button>\n                    <Button\n                        onClick={withdraw_collateral}\n                        variant='contained'\n                        color='error'\n                        disabled={disabled}\n                    >\n                        Withdraw\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    );\n}\n","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { Button, Avatar, Box, IconButton } from '@mui/material';\nimport { Close } from '@mui/icons-material';\n\nimport Web3 from \"web3\";\nimport { useMoralis } from \"react-moralis\";\n\nconst peg_multiplier = 10 ** 8;\nconst usdcLogo = 'https://cdn-icons-png.flaticon.com/512/590/590415.png';\n\nexport default function FormDialog({ contract_avaperps, contract_erc20copy, address_avaperps }) {\n    const { user } = useMoralis();\n\n    const [open, setOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n    const [amount, setAmount] = React.useState(0);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    \n    let from;\n    if (user) {\n        from = user.get('ethAddress');\n    }\n\n    async function mint() {\n        setLoading(true);\n\n        await contract_erc20copy.methods.mint(\n            10 ** 11\n        ).send({ from });\n\n        await contract_erc20copy.methods.increaseAllowance(\n            address_avaperps, 10 ** 11\n        ).send({ from });\n\n        window.location.reload();\n    }\n\n    return (\n        <Box m={1}>\n            <Button\n                color='inherit'\n                onClick={handleClickOpen}\n                // style={{ backgroundColor: 'darkSlateGray' }}\n                startIcon={<Avatar\n                    src={usdcLogo}\n                />}\n                disabled={!user}\n            >\n                Use Faucet\n            </Button>\n\n            <Dialog open={open}>\n                <DialogTitle sx={{ m: 0, p: 2 }}>\n                    Use Faucet\n                    \n                    <IconButton\n                        aria-label=\"close\"\n                        onClick={loading ? handleClickOpen : handleClose}\n                        sx={{\n                            position: 'absolute',\n                            right: 8,\n                            top: 8,\n                            color: (theme) => theme.palette.grey[500],\n                        }}\n                    >\n                        <Close />\n                    </IconButton>\n                </DialogTitle>\n\n                <DialogContent>\n                    <DialogContentText>\n                        USDC Faucet on Avalanche Fuji Testnet. Entails two transactions: minting test USDC and enabling you to deposit it.\n                    </DialogContentText>\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        variant='contained'\n                        onClick={mint}\n                    >\n                        Request 1000 USDC\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    );\n}\n","import React from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport { Button, Avatar } from '@mui/material';\n\nconst moralisIcon = 'https://moralis.io/wp-content/uploads/2021/06/cropped-Moralis-Favicon-Glass.png';\nconst metamaskIcon = 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/800px-MetaMask_Fox.svg.png';\n\nconst Login = ({ setPage }) => {\n    const { authenticate, isAuthenticated, user, logout } = useMoralis();\n\n    if (!isAuthenticated) {\n        return (\n            <div>\n                <Button\n                    onClick={async () => {\n                        await authenticate({ signingMessage: \"Hello World!\" });\n                    }}\n                    color='inherit'\n                    startIcon={<Avatar\n                        src={moralisIcon}\n                    />}\n                >\n                    Login\n                </Button>\n            </div>\n        );\n    }\n\n    // console.log(user.get('ethAddress'));\n\n    return (\n        <div>\n            <Button\n                onClick={async () => {\n                    await logout();\n                }}\n                color='inherit'\n                startIcon={<Avatar\n                    src={metamaskIcon}\n                />}\n            >\n                Logout\n            </Button>\n        </div>\n    );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/VistaRedLogo.e2ae08a8.png\";","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nimport Moralis from 'moralis';\nimport { useMoralis } from \"react-moralis\";\nimport Web3 from 'web3';\n\nimport DepositButton from './DepositButton';\nimport FaucetButton from './FaucetButton';\nimport Login from './Login';\nimport logo from '../../static/VistaRedLogo.png';\nconst peg_multiplier = 10 ** 8;\n\nexport default function TopBar({ contract_avaperps, contract_erc20copy, address_avaperps, address_erc20copy }) {\n    const { user } = useMoralis();\n    const [available, setAvailable] = React.useState(-1);\n    \n    let from;\n    if (user) {\n        from = user.get('ethAddress');\n    }\n\n    const getAvailable = async () => {\n        const resp = await contract_erc20copy.methods.allowance(from, address_avaperps).call();\n        setAvailable(\n            resp / peg_multiplier\n        );\n    }\n\n    React.useEffect(() => {\n        getAvailable();\n    }, [])\n\n    if (available < 0) {\n        getAvailable();\n    }\n\n    console.log(available)\n\n    return (\n        <AppBar\n            position=\"fixed\"\n            style={{\n                color: 'fireBrick',\n                background: 'transparent'\n            }}\n        >\n            <Toolbar>\n                \n                <Box m={2}>\n                    <img src={logo} alt=\"logo\" height=\"55px\" />\n                </Box>\n\n                <Typography\n                    variant=\"h4\" noWrap component=\"div\"\n                    sx={{ flexGrow: 1 }}\n                >\n                    Vista Protocol\n                </Typography>\n\n                <FaucetButton\n                    contract_erc20copy={contract_erc20copy}\n                    contract_avaperps={contract_avaperps}\n                    address_avaperps={address_avaperps}\n                />\n\n                <DepositButton\n                    contract_erc20copy={contract_erc20copy}\n                    contract_avaperps={contract_avaperps}\n                    available={available}\n                    address_avaperps={address_avaperps}\n                    address_erc20copy={address_erc20copy}\n                />\n\n                <Login />\n                \n            </Toolbar>\n        </AppBar>\n    )\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport { Toolbar } from '@mui/material';\nimport IndexInfo from './pages/IndexInfo/IndexInfo';\n\nexport default function SelectTextFields({ perp, set_perp, perps }) {\n    const handleChange = (event) => {\n        set_perp(event.target.value);\n    };\n\n    const currencies = perps.map( (label, value) => ({ label, value }) );\n\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                // '& .MuiTextField-root': { m: 1, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n\n            <TextField\n                id=\"outlined-select-currency\"\n                select\n                value={perp}\n                onChange={handleChange}\n                variant='standard'\n            >\n                {currencies.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                    </MenuItem>\n                ))}\n            </TextField>\n\n        </Box>\n    );\n}\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nimport Moralis from 'moralis';\nimport { useMoralis } from \"react-moralis\";\nimport Web3 from 'web3';\n\nimport Trade from './pages/Trade/Trade';\nimport Faucet from './pages/Faucet/Faucet';\nimport TopBar from './pages/TopBar/TopBar';\nimport SelectPerp from './SelectPerp';\n\nimport abi_avaperps from './contracts/abi_avaperps.json';\nimport abi_erc20copy from './contracts/abi_erc20copy.json';\nimport { address_erc20copy, address_avaperps } from './contracts/addresses.json';\n\nconst drawerWidth = 0;\n\nexport default function ResponsiveDrawer() {\n    const { user } = useMoralis();\n    const [contract_avaperps, set_contract_avaperps] = React.useState();\n    const [contract_erc20copy, set_contract_erc20copy] = React.useState();\n    const [net_id, set_net_id] = React.useState();\n    const [perp, set_perp] = React.useState(1);\n    const [page, set_page] = React.useState('faucet');\n\n    const get_net_id = async () => {\n        if (Web3.givenProvider === null) {\n            return;\n        }\n        const web3 = new Web3(Web3.givenProvider);\n        let resp;\n\n        resp = await web3.eth.net.getId();\n        set_net_id(resp);\n\n        resp = new web3.eth.Contract(abi_avaperps, address_avaperps);\n        set_contract_avaperps(resp);\n        \n        resp = new web3.eth.Contract(abi_erc20copy, address_erc20copy);\n        set_contract_erc20copy(resp);\n    }\n\n    React.useEffect(() => {\n        get_net_id();\n    }, [])\n\n    if (contract_avaperps == null) {\n        get_net_id();\n    }    \n\n    const perps = 'index avax btc eth link'.toUpperCase().split(' ');\n    const perp_name = perps[perp];\n\n    const trade = (\n        <Trade\n            contract_erc20copy={contract_erc20copy}\n            contract_avaperps={contract_avaperps}\n            net_id={net_id}\n            perp_name={perp_name}\n            perp={perp}\n            address_avaperps={address_avaperps}\n        >\n            <SelectPerp\n                perp={perp}\n                perps={perps}\n                set_perp={set_perp}\n            />\n        </Trade>\n    );\n    const faucet = (\n        <Faucet\n            contract_erc20copy={contract_erc20copy}\n        />\n    );\n    const pages = { trade, faucet }\n\n    return (\n        <Box\n            sx={{ display: 'flex' }}\n            style={{\n                background: 'linear-gradient(black, firebrick)',\n                height: '100vh'\n            }}\n        >\n            <CssBaseline />\n            <TopBar\n                contract_erc20copy={contract_erc20copy}\n                contract_avaperps={contract_avaperps}\n                address_avaperps={address_avaperps}\n                address_erc20copy={address_erc20copy}\n                pages={pages}\n                set_page={set_page}\n            />\n\n            <Box m={9}>\n                \n                <Trade\n                    contract_erc20copy={contract_erc20copy}\n                    contract_avaperps={contract_avaperps}\n                    net_id={net_id}\n                    perp_name={perp_name}\n                    perp={perp}\n                    address_avaperps={address_avaperps}\n                >\n                    <SelectPerp\n                        perp={perp}\n                        perps={perps}\n                        set_perp={set_perp}\n                    />\n                </Trade>\n\n            </Box>\n        </Box>\n    );\n}\n","import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n    },\n});\n\nexport default darkTheme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Moralis from \"moralis\";\nimport { MoralisProvider } from \"react-moralis\";\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme';\n\nconst APP_ID = \"zWytrx6G5R9k0UdpqvrptVYFTcuLiX7XMHcue9QJ\";\nconst SERVER_URL = \"https://l0fckgbjlk4g.usemoralis.com:2053/server\";\n\nReactDOM.render(\n//   <React.StrictMode>\n        <MoralisProvider appId={APP_ID} serverUrl={SERVER_URL}>\n            <ThemeProvider theme={theme}>\n                {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n                <CssBaseline />\n                <App />\n            </ThemeProvider>\n        </MoralisProvider>\n//   </React.StrictMode>\n    ,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}